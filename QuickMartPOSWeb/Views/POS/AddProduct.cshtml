@await Html.PartialAsync("~/Views/Shared/Style.cshtml")

@model QuickMartPOSWeb.Models.Product

<div class="form-wrapper">
    <h2 class="form-title">Add New Product</h2>

    <form asp-action="AddProduct" method="post" class="product-form">
        <div class="form-group">
            <label asp-for="Name">Product Name</label>
            <input asp-for="Name" class="form-control" required>
        </div>

        <div class="form-group">
            <label asp-for="Price">Price</label>
            <input asp-for="Price" class="form-control" type="number" step="0.01" required>
        </div>

        <div class="form-group">
            <label asp-for="Category" class="category-label">Category</label>
            <select asp-for="Category" id="categorySelect" class="form-control">
                <option value="">Select a category</option>
                @foreach (var category in ViewBag.Categories)
                {
                    <option value="@category">@category</option>
                }
                <option value="new">Add New Category</option>
            </select>
        </div>

        <div class="form-group hidden" id="newCategoryGroup">
            <label for="newCategory">New Category</label>
            <input type="text" id="newCategory" name="newCategory" class="form-control">
        </div>

        <button type="submit" class="btn-submit">Add Product</button>
        <div class ="mt-3">
            <a asp-action="POSInterface" class="btn btn-primary"> Back</a>
        </div>
    </form>
</div>


<script>
    document.getElementById('categorySelect').addEventListener('change', function () {
        var newCategoryGroup = document.getElementById('newCategoryGroup');
        if (this.value === 'new') {
            newCategoryGroup.style.display = 'block';
        } else {
            newCategoryGroup.style.display = 'none';
        }
    });

    document.getElementById('newCategory').addEventListener('input', function () {
        var categorySelect = document.getElementById('categorySelect');
        var newCategoryOption = categorySelect.querySelector('option[value="new"]');
        var newCategoryValue = this.value.trim();

        if (newCategoryValue) {
            // Check if the new category already exists
            var existingOption = Array.from(categorySelect.options).find(option => option.text.toLowerCase() === newCategoryValue.toLowerCase());

            if (existingOption) {
                categorySelect.value = existingOption.value;
            } else {
                // Add new option
                var newOption = document.createElement('option');
                newOption.value = newCategoryValue;
                newOption.text = newCategoryValue;
                categorySelect.insertBefore(newOption, newCategoryOption);
                categorySelect.value = newCategoryValue;
            }
        }
    });
</script>